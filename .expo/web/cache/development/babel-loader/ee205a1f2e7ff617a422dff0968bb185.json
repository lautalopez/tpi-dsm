{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Lautaro\\\\Proyectos\\\\Others\\\\expo-react-native\\\\components\\\\AlbumList.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { Component, useEffect, useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport axios from 'axios';\nimport AlbumDetail from \"./AlbumDetail\";\n\nfunction AlbumList(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      photoset = _useState2[0],\n      setPhotoset = _useState2[1];\n\n  useEffect(function () {\n    function getAlbumList() {\n      var albumResponse;\n      return _regeneratorRuntime.async(function getAlbumList$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axios.get('https://api.flickr.com/services/rest/?method=flickr.photosets.getList&api_key=6e8a597cb502b7b95dbd46a46e25db8d&user_id=137290658%40N08&format=json&nojsoncallback=1'));\n\n            case 3:\n              albumResponse = _context.sent;\n              setPhotoset(albumResponse.data.photosets.photoset);\n              _context.next = 9;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    }\n\n    getAlbumList();\n    return function () {};\n  }, []);\n\n  function renderAlbums() {\n    var _this = this;\n\n    return photoset.map(function (album) {\n      return React.createElement(AlbumDetail, {\n        navigation: navigation,\n        key: album.id,\n        title: album.title._content,\n        albumId: album.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      });\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, photoset ? React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 26\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, renderAlbums())) : React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 18\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Loading...\")));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0\n  },\n  item: {\n    backgroundColor: '#f9c2ff',\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16\n  },\n  title: {\n    fontSize: 32\n  }\n});\n\nvar AlbumList1 = function (_Component) {\n  _inherits(AlbumList1, _Component);\n\n  var _super = _createSuper(AlbumList1);\n\n  function AlbumList1() {\n    var _this2;\n\n    _classCallCheck(this, AlbumList1);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.state = {\n      photoset: null\n    };\n    return _this2;\n  }\n\n  _createClass(AlbumList1, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this3 = this;\n\n      axios.get('https://api.flickr.com/services/rest/?method=flickr.photosets.getList&api_key=6e8a597cb502b7b95dbd46a46e25db8d&user_id=137290658%40N08&format=json&nojsoncallback=1').then(function (response) {\n        return _this3.setState({\n          photoset: response.data.photosets.photoset\n        });\n      });\n    }\n  }, {\n    key: \"renderAlbums\",\n    value: function renderAlbums() {\n      var _this4 = this;\n\n      return this.state.photoset.map(function (album) {\n        return React.createElement(AlbumDetail, {\n          navigation: _this4.props.navigation,\n          key: album.id,\n          title: album.title._content,\n          albumId: album.id,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state);\n\n      if (!this.state.photoset) {\n        return React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 20\n          }\n        }, \"Loading...\");\n      }\n\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }\n      }, this.renderAlbums()));\n    }\n  }]);\n\n  return AlbumList1;\n}(Component);\n\nexport default AlbumList;","map":{"version":3,"sources":["C:/Lautaro/Proyectos/Others/expo-react-native/components/AlbumList.js"],"names":["React","Component","useEffect","useState","axios","AlbumDetail","AlbumList","navigation","photoset","setPhotoset","getAlbumList","get","albumResponse","data","photosets","renderAlbums","map","album","id","title","_content","flex","styles","StyleSheet","create","container","marginTop","StatusBar","currentHeight","item","backgroundColor","padding","marginVertical","marginHorizontal","fontSize","AlbumList1","state","then","response","setState","props","console","log"],"mappings":"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","sourcesContent":["import React, {Component, useEffect, useState} from 'react';\nimport {ScrollView, Text, View} from 'react-native';\nimport axios from 'axios';\nimport AlbumDetail from './AlbumDetail';\n\nfunction AlbumList({navigation}) {\n    const [photoset, setPhotoset] = useState(null);\n\n    useEffect(() => {\n        async function getAlbumList() {\n            try {\n                const albumResponse = await axios\n                    .get(\n                        'https://api.flickr.com/services/rest/?method=flickr.photosets.getList&api_key=6e8a597cb502b7b95dbd46a46e25db8d&user_id=137290658%40N08&format=json&nojsoncallback=1',\n                    )\n                setPhotoset(albumResponse.data.photosets.photoset);\n\n            } catch (e) {\n\n            }\n        }\n        getAlbumList();\n\n        return () => {\n\n        }\n    }, [])\n\n    function renderAlbums() {\n        return photoset.map((album) => (\n            <AlbumDetail\n                navigation={navigation}\n                key={album.id}\n                title={album.title._content}\n                albumId={album.id}\n            />\n        ));\n    }\n\n    return (\n        <div>\n            {photoset ? (<View style={{flex: 1}}>\n                    <ScrollView>{renderAlbums()}</ScrollView>\n                </View>) :\n                (<View style={{flex: 1}}>\n                    <Text>Loading...</Text>\n                </View>)}\n        </div>\n    );\n    \n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        marginTop: StatusBar.currentHeight || 0,\n    },\n    item: {\n        backgroundColor: '#f9c2ff',\n        padding: 20,\n        marginVertical: 8,\n        marginHorizontal: 16,\n    },\n    title: {\n        fontSize: 32,\n    },\n});\n\nclass AlbumList1 extends Component {\n    state = {photoset: null};\n\n    componentWillMount() {\n        axios\n            .get(\n                'https://api.flickr.com/services/rest/?method=flickr.photosets.getList&api_key=6e8a597cb502b7b95dbd46a46e25db8d&user_id=137290658%40N08&format=json&nojsoncallback=1',\n            )\n            .then((response) =>\n                this.setState({photoset: response.data.photosets.photoset}),\n            );\n    }\n\n    renderAlbums() {\n        return this.state.photoset.map((album) => (\n            <AlbumDetail\n                navigation={this.props.navigation}\n                key={album.id}\n                title={album.title._content}\n                albumId={album.id}\n            />\n        ));\n    }\n\n    render() {\n        console.log(this.state);\n\n        if (!this.state.photoset) {\n            return <Text>Loading...</Text>;\n        }\n\n        return (\n            <View style={{flex: 1}}>\n                <ScrollView>{this.renderAlbums()}</ScrollView>\n            </View>\n        );\n    }\n}\n\nexport default AlbumList;\n"]},"metadata":{},"sourceType":"module"}