{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Lautaro\\\\Proyectos\\\\Others\\\\expo-react-native\\\\components\\\\AlbumList.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport axios from 'axios';\nimport AlbumDetail from \"./AlbumDetail\";\n\nvar AlbumList = function (_Component) {\n  _inherits(AlbumList, _Component);\n\n  var _super = _createSuper(AlbumList);\n\n  function AlbumList() {\n    var _this;\n\n    _classCallCheck(this, AlbumList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      photoset: null\n    };\n    return _this;\n  }\n\n  _createClass(AlbumList, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      axios.get('https://api.flickr.com/services/rest/?method=flickr.photosets.getList&api_key=6e8a597cb502b7b95dbd46a46e25db8d&user_id=137290658%40N08&format=json&nojsoncallback=1').then(function (response) {\n        return _this2.setState({\n          photoset: response.data.photosets.photoset\n        });\n      });\n    }\n  }, {\n    key: \"renderAlbums\",\n    value: function renderAlbums() {\n      var _this3 = this;\n\n      return this.state.photoset.map(function (album) {\n        return React.createElement(AlbumDetail, {\n          navigation: _this3.props.navigation,\n          key: album.id,\n          title: album.title._content,\n          albumId: album.id,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 7\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state);\n\n      if (!this.state.photoset) {\n        return React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 14\n          }\n        }, \"Loading...\");\n      }\n\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }, React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, this.renderAlbums()));\n    }\n  }]);\n\n  return AlbumList;\n}(Component);\n\nexport default AlbumList;","map":{"version":3,"sources":["C:/Lautaro/Proyectos/Others/expo-react-native/components/AlbumList.js"],"names":["React","Component","axios","AlbumDetail","AlbumList","state","photoset","get","then","response","setState","data","photosets","map","album","props","navigation","id","title","_content","console","log","flex","renderAlbums"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP;;IAEMC,S;;;;;;;;;;;;;;;UACJC,K,GAAQ;AAACC,MAAAA,QAAQ,EAAE;AAAX,K;;;;;;WAER,8BAAqB;AAAA;;AACnBJ,MAAAA,KAAK,CACFK,GADH,CAEI,qKAFJ,EAIGC,IAJH,CAIQ,UAACC,QAAD;AAAA,eACJ,MAAI,CAACC,QAAL,CAAc;AAACJ,UAAAA,QAAQ,EAAEG,QAAQ,CAACE,IAAT,CAAcC,SAAd,CAAwBN;AAAnC,SAAd,CADI;AAAA,OAJR;AAOD;;;WAED,wBAAe;AAAA;;AACb,aAAO,KAAKD,KAAL,CAAWC,QAAX,CAAoBO,GAApB,CAAwB,UAACC,KAAD;AAAA,eAC7B,oBAAC,WAAD;AACE,UAAA,UAAU,EAAE,MAAI,CAACC,KAAL,CAAWC,UADzB;AAEE,UAAA,GAAG,EAAEF,KAAK,CAACG,EAFb;AAGE,UAAA,KAAK,EAAEH,KAAK,CAACI,KAAN,CAAYC,QAHrB;AAIE,UAAA,OAAO,EAAEL,KAAK,CAACG,EAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD6B;AAAA,OAAxB,CAAP;AAQD;;;WAED,kBAAS;AACPG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAjB;;AAEA,UAAI,CAAC,KAAKA,KAAL,CAAWC,QAAhB,EAA0B;AACxB,eAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD;;AAED,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACgB,UAAAA,IAAI,EAAE;AAAP,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAa,KAAKC,YAAL,EAAb,CADF,CADF;AAKD;;;;EApCqBtB,S;;AAuCxB,eAAeG,SAAf","sourcesContent":["import React, {Component} from 'react';\nimport {ScrollView, Text, View} from 'react-native';\nimport axios from 'axios';\nimport AlbumDetail from './AlbumDetail';\n\nclass AlbumList extends Component {\n  state = {photoset: null};\n\n  componentWillMount() {\n    axios\n      .get(\n        'https://api.flickr.com/services/rest/?method=flickr.photosets.getList&api_key=6e8a597cb502b7b95dbd46a46e25db8d&user_id=137290658%40N08&format=json&nojsoncallback=1',\n      )\n      .then((response) =>\n        this.setState({photoset: response.data.photosets.photoset}),\n      );\n  }\n\n  renderAlbums() {\n    return this.state.photoset.map((album) => (\n      <AlbumDetail\n        navigation={this.props.navigation}\n        key={album.id}\n        title={album.title._content}\n        albumId={album.id}\n      />\n    ));\n  }\n\n  render() {\n    console.log(this.state);\n\n    if (!this.state.photoset) {\n      return <Text>Loading...</Text>;\n    }\n\n    return (\n      <View style={{flex: 1}}>\n        <ScrollView>{this.renderAlbums()}</ScrollView>\n      </View>\n    );\n  }\n}\n\nexport default AlbumList;\n"]},"metadata":{},"sourceType":"module"}